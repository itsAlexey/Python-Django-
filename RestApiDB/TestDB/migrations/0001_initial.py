# Generated by Django 4.2.9 on 2024-02-16 11:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название интерфейса')),
                ('speed', models.FloatField(verbose_name='Скорость интерфейса в Мбит/сек')),
                ('status', models.CharField(max_length=50, verbose_name='Статус')),
                ('duplex_mode', models.TextField(max_length=50, verbose_name='Режим дуплекса - полный или половинный')),
            ],
            options={
                'verbose_name': 'Интерфейс',
                'verbose_name_plural': 'Интерфейсы',
                'db_table': 'interface',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('device_type', models.CharField(max_length=50, verbose_name='Тип устройства')),
                ('location', models.CharField(max_length=150, verbose_name='Местонахождение')),
            ],
            options={
                'verbose_name': 'Сетевое устройство',
                'verbose_name_plural': 'Сетевые устройства',
                'db_table': 'network_device',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100, verbose_name='ID пользователя')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('activity_type', models.CharField(max_length=100, verbose_name='Тип активности')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Активность пользователя',
                'verbose_name_plural': 'Активности пользователей',
                'db_table': 'user_activity',
            },
        ),
        migrations.CreateModel(
            name='TrafficData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('inbound_traffic', models.FloatField(verbose_name='Входящий трафик')),
                ('outbound_traffic', models.FloatField(verbose_name='Исходящий трафик')),
                ('total_packets', models.FloatField(verbose_name='Общее количество пакетов')),
                ('error_packets', models.FloatField(verbose_name='Количество пакетов с ошибками')),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.interface', verbose_name='Интерфейс')),
            ],
            options={
                'verbose_name': 'Данные о трафике',
                'verbose_name_plural': 'Данные о трафиках',
                'db_table': 'traffic_data',
            },
        ),
        migrations.CreateModel(
            name='PowerConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('power_consumption', models.CharField(max_length=5, verbose_name='Потребление энергии')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство')),
            ],
            options={
                'verbose_name': 'Потребление энергии',
                'verbose_name_plural': 'Потребление энергии',
                'db_table': 'рowerсonsumption',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('cpu_usage', models.FloatField(verbose_name='Использование ЦПУ')),
                ('memory_usage', models.FloatField(verbose_name='Использование памяти')),
                ('storage_ussage', models.CharField(max_length=10, verbose_name='Использование хранилища')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Метрики производительности',
                'verbose_name_plural': 'Метрики производительности',
                'db_table': 'performance_metrics',
            },
        ),
        migrations.CreateModel(
            name='PacketLossData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('packet_loss', models.FloatField(verbose_name='Потеря пакетов')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство')),
            ],
            options={
                'verbose_name': 'Потеря пакетов',
                'verbose_name_plural': 'Потеря пакетов',
                'db_table': 'packetlossdata',
            },
        ),
        migrations.CreateModel(
            name='NetworkEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_timestamp', models.DateTimeField(verbose_name='Время события')),
                ('event_type', models.CharField(max_length=100, verbose_name='Тип события')),
                ('severity_level', models.CharField(max_length=100, verbose_name='Уровень серьезности')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Сетевое событие',
                'verbose_name_plural': 'Сетевые события',
                'db_table': 'network_events',
            },
        ),
        migrations.CreateModel(
            name='LatencyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('latency', models.FloatField(verbose_name='Задержка')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство')),
            ],
            options={
                'verbose_name': 'Задержка',
                'verbose_name_plural': 'Задержка',
                'db_table': 'latencydata',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP-адрес')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Основной адрес?')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство')),
            ],
            options={
                'verbose_name': 'IP-адрес',
                'verbose_name_plural': 'IP-адреса',
                'db_table': 'ip_address',
            },
        ),
        migrations.AddField(
            model_name='interface',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство'),
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('error_type', models.CharField(max_length=100, verbose_name='Тип ошибки')),
                ('description', models.TextField(verbose_name='Описание')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Журнал ошибок',
                'verbose_name_plural': 'Журналы ошибок',
                'db_table': 'error_log',
            },
        ),
        migrations.CreateModel(
            name='DeviceTemperature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('temperature', models.FloatField(verbose_name='Температура устройства')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство')),
            ],
            options={
                'verbose_name': 'Температура устройства',
                'verbose_name_plural': 'Температура устройства',
                'db_table': 'devicetemperature',
            },
        ),
        migrations.CreateModel(
            name='DeviceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration_timestamp', models.DateTimeField(verbose_name='Время конфигурации')),
                ('configuration_details', models.TextField(verbose_name='Детали конфигурации')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Конфигурация устройства',
                'verbose_name_plural': 'Конфигурации устройств',
                'db_table': 'device_configuration',
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration_text', models.TextField(verbose_name='Текст конфигурации')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Сетевое устройство')),
            ],
            options={
                'verbose_name': 'Конфигурация',
                'verbose_name_plural': 'Конфигурации',
                'db_table': 'configuration',
            },
        ),
        migrations.CreateModel(
            name='BandwidthUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('bandwidth_usage', models.FloatField(verbose_name='Использование полосы пропускания')),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.interface', verbose_name='Интерфейс')),
            ],
            options={
                'verbose_name': 'Использование полосы пропускания',
                'verbose_name_plural': 'Использование полос пропускания',
                'db_table': 'bandwidth_usage',
            },
        ),
        migrations.CreateModel(
            name='AuthenticationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100, verbose_name='ID пользователя')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('action_type', models.CharField(max_length=100, verbose_name='Тип действия')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TestDB.networkdevice', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Журнал аутентификации',
                'verbose_name_plural': 'Журналы аутентификации',
                'db_table': 'authentication_log',
            },
        ),
    ]
