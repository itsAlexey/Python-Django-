# Generated by Django 5.0.1 on 2024-02-21 20:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('error_type', models.CharField(max_length=100, verbose_name='Тип ошибки')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Журнал ошибок',
                'verbose_name_plural': 'Журналы ошибок',
                'db_table': 'error_log',
            },
        ),
        migrations.CreateModel(
            name='TrafficData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Время')),
                ('inbound_traffic', models.FloatField(verbose_name='Входящий трафик')),
                ('outbound_traffic', models.FloatField(verbose_name='Исходящий трафик')),
                ('total_packets', models.FloatField(verbose_name='Общее количество пакетов')),
                ('error_packets', models.FloatField(verbose_name='Количество пакетов с ошибками')),
            ],
            options={
                'verbose_name': 'Данные о трафике',
                'verbose_name_plural': 'Данные о трафиках',
                'db_table': 'traffic_data',
            },
        ),
        migrations.CreateModel(
            name='TypeDevices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Тип устройства')),
                ('serial_number', models.CharField(max_length=50, verbose_name='Серийный номер')),
                ('about', models.CharField(blank=True, max_length=200, verbose_name='Об устройстве')),
            ],
            options={
                'verbose_name': 'Тип устройства',
                'verbose_name_plural': 'Тип устройства',
                'db_table': 'typedevice',
            },
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название интерфейса')),
                ('speed', models.FloatField(verbose_name='Скорость интерфейса в Мбит/сек')),
                ('status', models.CharField(max_length=50, verbose_name='Статус')),
                ('duplex_mode', models.TextField(max_length=50, verbose_name='Режим дуплекса - полный или половинный')),
                ('trafficDataInterface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='TestDB.trafficdata')),
            ],
            options={
                'verbose_name': 'Интерфейс',
                'verbose_name_plural': 'Интерфейсы',
                'db_table': 'interface',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('device_type', models.CharField(max_length=50, verbose_name='Тип устройства')),
                ('location', models.CharField(max_length=150, verbose_name='Местонахождение')),
                ('ErrorLogND', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='TestDB.errorlog')),
                ('interfaceND', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='TestDB.interface')),
                ('typeNetDevicesND', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='TestDB.typedevices')),
            ],
            options={
                'verbose_name': 'Сетевое устройство',
                'verbose_name_plural': 'Сетевые устройства',
                'db_table': 'network_device',
            },
        ),
    ]
